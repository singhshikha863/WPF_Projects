<Window x:Class="CustomItemsPanel.Window1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:CustomItemsPanel" 
    Title="Custom ItemsPanel" Height="658.462" Width="1113.846"
    WindowStartupLocation="CenterScreen"
    >

    <Window.Resources>
        <Style TargetType="{x:Type ListBox}">
            <!-- Set the ItemTemplate of the ListBox to a DataTemplate 
           which explains how to display an object of type BitmapImage. -->
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Border 
              BorderBrush="Black" 
              BorderThickness="4" 
              CornerRadius="5"
              Margin="6"
              >
                            <Image Name ="Image1"
                Source="{Binding Path=UriSource}" 
                Stretch="Fill"
                Width="400" Height="300" 
               />
                        </Border>
                        <DataTemplate.Triggers>
                            <Trigger Property= "IsMouseOver" Value="true">
                                <Setter Property="LayoutTransform" TargetName="Image1">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </Setter.Value>
            </Setter>

            <!-- Swap out the default items panel with a WrapPanel so that
           the images will be arranged with a different layout. -->
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>

            <!-- Set this attached property to 'Disabled' so that the 
           ScrollViewer in the ListBox will never show a horizontal 
           scrollbar, and the WrapPanel it contains will be constrained 
           to the width of the ScrollViewer's viewable surface. -->
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" 
                    Value="Disabled" />
        </Style>
    </Window.Resources>

    <Window.DataContext>
        <ObjectDataProvider 
      ObjectType="{x:Type local:RobotImageLoader}" MethodName="LoadImages" />
    </Window.DataContext>

    <!-- This ListBox is the Content of the Window. 
       Normally you would have a panel of some type
       as the Window's Content, but let's keep it simple. -->
    <Grid x:Name="ImageGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>

        <Grid Background="Aqua " Height="45" Grid.Row ="0" Margin ="0,0,0,0" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width ="1*"></ColumnDefinition>
                <ColumnDefinition Width="7*"></ColumnDefinition>
                <ColumnDefinition Width="1*"></ColumnDefinition>
                <ColumnDefinition Width="1*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Label Margin="10,0,0,0" Height="23" Name="LblCurrentPhoto" Grid.Column="0" HorizontalAlignment="Center">Search
            </Label>
            <TextBox Name="SearchTextBox" Height="23"  Visibility="Visible" Margin="0,11" Grid.Column="1" HorizontalAlignment="Stretch"/>
            <Button Name="BtnBrowse" Margin="10,0,0,0" Height="23" Click ="GoButton_Click" Grid.Column="2">Browse
            </Button>
            <Button Name="BtnPrev" Margin="10,0,50,0" Height="23" Click ="PreviousSearchClick" Grid.Column="3">Previous
            </Button>
        </Grid>
        <!--</StackPanel>-->
        <ListBox Name="ImageCollection" ItemsSource="{Binding UpdateSourceTrigger=PropertyChanged}" Grid.Row="1"  />
    </Grid>
    
</Window>